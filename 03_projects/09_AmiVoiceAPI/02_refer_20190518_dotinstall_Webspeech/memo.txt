# JavaScriptで音声認識サービスを作ろう (全5回)
- Refer: (https://dotinstall.com/lessons/webspeech_js)
- 作成サイト: (02_work/index.html)

------------------------------------------------------------
## 01 開発の準備を整えよう (02:45)
- 完成版の確認
	- ドットインストールの完成品・デモでは動かない　⇒　×
	- ローカルで開くと認識することを発見
- index.htmlの作成
	- ボタンの実装
	- `index.html`内でJavaScript領域の作成

------------------------------------------------------------
## 02 サーバー環境で動作を確認しよう (02:24)
- ボタン、イベントリスナーの設置
	- JavaScriptを`main.js`に移動
	- DOMでbutton要素を取り出し、addEventListenerでclickイベント取得
- 動作確認
	- Chromeで`[Ctrl]+[Shift]+I`でコンソール上で確認


------------------------------------------------------------
## 03 音声を認識させてみよう (02:41)
- webkitSpeechRecognitionオブジェクトの設定
	- `const speech = new webkitSpeechRecognition();`でオブジェクト生成
- 音声認識の実装
	- イベント ` speech.onresult = (e) => {...}` で取得する
- 処理結果の見方
	- 【重要】`index.html`をローカルでchromeで開く
	- e.results[0][0].transcriptで解析結果が見れる
	- 下のようにすれば、別ウインドウに言った言葉が表示される
```
  const speech = new webkitSpeechRecognition();
  btn.addEventListener('click', () => {
    speech.start();
  }
  speech.onresult = (e) => {
    console.log(e);
    alert(e.results[0][0].transcript);
    speech.stop();
  }
```


------------------------------------------------------------
## 04 背景色を変えてみよう (02:13)
- 背景色の変更
	- DOM でbackgroudカラーを変更
```
  speech.onresult = (e) => {
    // console.log(e);
    speech.stop();
    if (e.results[0].isFinal) {
      console.log(e.results[0][0].transcript);
      document.body.style.background = e.results[0][0].transcript;
    }
    btn.disabled = false;
  }
```
- 動作確認
	- Startしてマイク許可を選択した後、話しかける

------------------------------------------------------------
## 05 アプリを完成させよう (02:10)
- onendイベントの実装
	- stop が呼ばれたときに実行されるイベント。再スタートする
```
  speech.onend = () => {
    speech.start();
  };
```
- onsoundstart、onsoundendイベントの実装
	- 音声認識が開始したときと終了したときの動作を定義する
```
  speech.onsoundstart = () => {
    btn.textContent = 'Processing...';
  };
  speech.onsoundend = () => {
    btn.textContent = 'Waiting...';
  };
```

------------------------------------------------------------
